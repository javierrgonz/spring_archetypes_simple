<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Artifact properties -->
	<groupId>com.jrg.archetype</groupId>
	<artifactId>spring.simple</artifactId>
	<version>0.0.3-SNAPSHOT</version>
	<name>Spring Simple Archetype</name>
	<url>https://github.com/javierrgonz/spring_archetypes_simple.git</url>

	<!-- Propiedades -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<org.springframework.version>5.2.22.RELEASE</org.springframework.version>
		<logback.classic.version>1.2.3</logback.classic.version>
		<org.projectlombok.version>1.16.16</org.projectlombok.version>
		<org.aspectj.version>1.8.9</org.aspectj.version>
		<log.version>2.0.0-RC1</log.version>
	</properties>

	<!-- Dependencias -->
	<dependencies>
		<!-- lombok dependency -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${org.projectlombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- AOP -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${org.aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj.version}</version>
		</dependency>

		<!-- tinyLog -->
		<dependency>
			<groupId>org.tinylog</groupId>
			<artifactId>tinylog-api</artifactId>
			<version>${log.version}</version>
		</dependency>
		<dependency>
			<groupId>org.tinylog</groupId>
			<artifactId>tinylog-impl</artifactId>
			<version>${log.version}</version>
		</dependency>

	</dependencies>

	<!-- Profile configuration -->
	<profiles>
		<!-- The configuration of the development profile -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file -->
				<build.profile.id>dev</build.profile.id>
			</properties>
		</profile>
		<!-- The configuration of the production profile -->
		<profile>
			<id>prod</id>
			<properties>
				<build.profile.id>prod</build.profile.id>
			</properties>
		</profile>
	</profiles>

	<!-- Build management -->
	<build>

		<!-- Ensures that the config.properties file is always loaded from the 
			configuration directory of the active Maven profile. -->
		<filters>
			<filter>src/main/resources/profiles/${build.profile.id}/config_${build.profile.id}.properties</filter>
			<filter>src/main/resources/profiles/${build.profile.id}/tinylog_${build.profile.id}.properties</filter>
		</filters>

		<!-- Placeholders that are found from the files located in the configured 
			resource directories are replaced with the property values found from the 
			profile specific configuration file. -->
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<!-- lock down plugins versions to avoid using Maven defaults (may be moved 
			to parent pom) -->
		<pluginManagement>
			<plugins>
				<!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
